name: Build, Publish and Update

on:
  workflow_call:
    inputs:
      SERVICE_NAME:
        required: true
        type: string
      TAG_PREFIX:
        type: string
      GCRUN_SERVICE_NAME:
        required: true
        type: string
      # preview, release, production
      TYPE:
        required: true
        type: string
      REPO:
        required: true
        type: string
      BRANCH_NAME:
        type: string
      PR_NUMBER:
        type: number
      ACTOR:
        required: true
        type: string
    secrets:
      GCP_PROJECT_ID:
        required: true
      GCP_SA_GH_KEY:
        required: true
      DISCORD_WEBHOOK:
        required: true
      GH_TOKEN:
        required: true
      SONAR_TOKEN:
        required: true

jobs:
  sonarcloud:
    if: ${{ (inputs.TYPE == 'preview') || (inputs.TYPE == 'release')}}
    name: SonarCloud
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  build-and-push:
    runs-on: ubuntu-latest

    # VARIABLES IN IMAGE NAME
    env:
      IMAGE_PATH: ${{ secrets.GCP_PROJECT_ID }}/${{ inputs.SERVICE_NAME }}
      BRANCH_NAME: ${{ inputs.BRANCH_NAME }}
      PR_NUMBER: ${{ inputs.PR_NUMBER }}

    steps:
      - name: Starting notification
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        uses: Ilshidur/action-discord@master
        with:
          args: |
            
            ----------------------------------------------

            {{ inputs.ACTOR }} started:
            **${{ inputs.SERVICE_NAME }}** build.
            URL: https://github.com/DeviantsFactions/${{ inputs.REPO }}/actions
            Type: ${{ inputs.TYPE }}

            ----------------------------------------------
      # CHECKOUT
      - name: Checkout
        uses: DeviantsFactions/checkout@v2
      # SET DYNAMIC VARS
      ##  IMAGE_NAME_HASH
      - name: Set image name with commit hash
        shell: bash
        run: |-
          echo IMAGE_NAME_HASH=us.gcr.io/$IMAGE_PATH:$GITHUB_SHA >> $GITHUB_ENV
      - run: echo $IMAGE_NAME_HASH
      ##  TARGET IMAGE FROM BRANCH
      - name: Set image name with branch name
        if: ${{ (inputs.TYPE != 'preview') }}
        shell: bash
        run: |-
          echo TARGET_IMAGE_NAME=us.gcr.io/$IMAGE_PATH:$BRANCH_NAME >> $GITHUB_ENV
      ##  TARGET IMAGE FROM PR
      - name: Set image name with PR number
        if: ${{ (inputs.TYPE == 'preview') }}
        shell: bash
        run: |-
          echo TARGET_IMAGE_NAME=us.gcr.io/$IMAGE_PATH:pr-$PR_NUMBER >> $GITHUB_ENV
      ### CHECK
      - run: echo $TARGET_IMAGE_NAME

      # SET PROVIDERS
      ##  NODE
      - uses: DeviantsFactions/setup-node@v2
        with:
          node-version: '16.13.0'
      ##  GCP AUTH
      - id: gcp-auth
        uses: DeviantsFactions/auth@v0
        with:
          credentials_json: ${{ secrets.GCP_SA_GH_KEY }}
      ##  GCP SDK
      - name: Set up Cloud SDK
        uses: DeviantsFactions/setup-gcloud@v0.3.0

      # INSTALL DEPENDENCIES
      ##  NODE
      # - run: npm install

      # RUN TESTS
      ##  NODE
      # - run: npm test

      # BUILD
      ##  BUILD ARTIFACT
      - name: Docker build with branch name
        run: |-
          docker build --no-cache \
          -t $TARGET_IMAGE_NAME \
          -t $IMAGE_NAME_HASH \
          . -f Dockerfile

      ##  REGISTRY AUTH (GCR)
      - run: |
          gcloud auth configure-docker -q
      ##  PUSH
      - name: Docker push with branch name
        run: |-
          docker push $TARGET_IMAGE_NAME
          docker push $IMAGE_NAME_HASH

      # DEPLOY
      ## Withouth revision suffic
      - uses: 'DeviantsFactions/deploy-cloudrun@v0.6.0'
        if: ${{ (inputs.TYPE != 'preview') }}
        with:
          service: ${{ inputs.GCRUN_SERVICE_NAME }}
          image: ${{ env.TARGET_IMAGE_NAME }}
      ## With revision
      - uses: 'DeviantsFactions/deploy-cloudrun@v0.6.0'
        if: ${{ (inputs.TYPE == 'preview') }}
        with:
          service: ${{ inputs.GCRUN_SERVICE_NAME }}
          image: ${{ env.TARGET_IMAGE_NAME }}
          tag: ${{ inputs.TAG_PREFIX }}-preview-${{ inputs.PR_NUMBER }}
          suffix: -${{ inputs.PR_NUMBER }}
          # To do: LB logic
      - name: Success notification
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        uses: Ilshidur/action-discord@master
        with:
          args: |
            
            ----------------------------------------------

            Success
            **${{ inputs.SERVICE_NAME }}** build.
            Type: ${{ inputs.TYPE }}

            ----------------------------------------------
      - name: Failure notification
        if: ${{ failure() }}
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        uses: Ilshidur/action-discord@master
        with:
          args: |
            
            ----------------------------------------------

            Failed
            **${{ inputs.SERVICE_NAME }}** build.
            Type: ${{ inputs.TYPE }}
            Repo: https://github.com/DeviantsFactions/${{ inputs.REPO }}/actions

            ----------------------------------------------